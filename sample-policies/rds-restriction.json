########### START DELETE HERE ###########
# Sample showing how to restrict RDS instance creation based on certain conditions.
# Make sure to delete unwanted areas.
# CloudFormation - read-only
# CloudWatch - All read-only access
# ResourceGroups - Read-only
# RDS actions restricted to db instance type, engine, billing, multi-zone requirements, volume size and type,
# Certain RDS activities such as subnet group and security groups access/creation would require EC2 access as well. In this example, EC2 read access and some basic ec2 actions are provided.
########### START DELETE HERE ###########

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "AllowAllActions",
            "Action": [
                "cloudformation:List*",
                "cloudformation:Describe*",
                "cloudformation:Detect*",
                "cloudformation:EstimateTemplateCost",
                "cloudformation:Get*",
                "cloudwatch:Describe*",
                "cloudwatch:Get*",
                "cloudwatch:List*",
                "ec2:Describe*",
                "ec2:Get*",
                "ec2:*SecurityGroup*",
                "events:Describe*",
                "events:List*",
                "events:TestEventPattern",
                "iam:List*",
                "iam:Get*",
                "kms:List*",
                "kms:Describe*",
                "logs:List*",
                "logs:Describe*",
                "logs:Get*",
                "logs:StartQuery",
                "logs:StopQuery",
                "logs:TestMetricFilter",
                "logs:FilterLogEvents",
                "rds:*ActivityStream",
                "rds:*AvailabilityZone*",
                "rds:*Backup*",
                "rds:*Cluster",
                "rds:*DBProxy*",
                "rds:*Event*",
                "rds:*Export*",
                "rds:*Group*",
                "rds:*MaintenanceAction",
                "rds:*Region*",
                "rds:*Snapshot*",
                "rds:*Tag*",
                "rds:Add*",
                "rds:Delete*",
                "rds:Describe*",
                "rds:Download*",
                "rds:ImportInstallationMedia",
                "rds:ModifyCertificates",
                "rds:PromoteReadReplica",
                "rds:Remove*",
                "rds:Restore*",
                "rds:StopDBInstance*",
                "rds-data:*",
                "resource-groups:Get*",
                "resource-groups:List*",
                "resource-groups:SearchResources",
                "secretsmanager:CreateSecret",
                "sts:DecodeAuthorizationMessage",
                "tag:Get*",
                "tag:UntagResources",
                "tag:TagResources"
            ],
            "Effect": "Allow",
            "Resource": "*"
        },
        {
            "Sid": "RestrictRDSActivity",
            "Effect": "Allow",
            "Action": [
                "rds:CreateDBInstance",
                "rds:CreateDBInstanceReadReplica",
                "rds:ModifyDBInstance",
                "rds:RebootDBInstance",
                "rds:StartDBInstance"
            ],
            "Resource": "*",
            "Condition": {
                "ForAnyValue:StringLikeIfExists": {
                    "rds:DatabaseEngine": [
                        "aurora-mysql",
                        "aurora-postgresql",
                        "mysql",
                        "postgres",
                        "mariadb"
                    ],
                    "rds:DatabaseClass": [
                        "db.t*.nano",
                        "db.t*.micro",
                        "db.t*.small",
                        "db.t*.medium"
                    ]
                },
                "NumericLessThanEqualsIfExists": {
                    "rds:StorageSize": "100"
                },
                "NumericEqualsIfExists": {
                    "rds:Piops": "0"
                }
            }
        },
        {
            "Sid": "RestrictRIPurchase",
            "Action": [
                "rds:PurchaseReservedDBInstancesOffering"
            ],
            "Effect": "Deny",
            "Resource": "*"
        },
        {
            "Sid": "RDSRoleAndPolicies",
            "Effect": "Allow",
            "Action": [
                "iam:CreateServiceLinkedRole",
                "iam:PassRole"
            ],
            "Resource": "arn:aws:iam::*:role/aws-service-role/*",
            "Condition": {
                "StringLikeIfExists": {
                    "iam:AWSServiceName": "rds.amazonaws.com",
                    "iam:PassedToService": "rds.amazonaws.com"
                }
            }
        }
    ]
}
