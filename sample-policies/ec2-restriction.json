########### START DELETE HERE ###########
# Sample AWS IAM policy showing how to restrict EC2 instance creation and start operation based on certain conditions.
# Make sure to delete unwanted sections.
# IAM - Read-only permissions are provided. For instance profile and other write based actions, refer to the IAM permission file.
# SSM - Run Command, Sessions Manager, Automation and Read-only access is provided. This will help if environments have restricted SSH\RDP access.
# CloudFormation - Read-only access
# CloudWatch - Read-only access
# ResourceGroups - Read-only access
# Windows instances need 35 GB volumes.
# SNS read access.
# FYI - Nested conditions are evaluated as an AND condition. Therefore, statements that have multiple conditions that have to be evaluated on an OR basis, should be separated into multiple statements.
########### END DELETE HERE   ###########

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "AllowAllActions",
            "Effect": "Allow",
            "Action": [
                "cloudformation:List*",
                "cloudformation:Describe*",
                "cloudformation:Detect*",
                "cloudformation:EstimateTemplateCost",
                "cloudformation:Get*",
                "cloudwatch:Describe*",
                "cloudwatch:Get*",
                "cloudwatch:List*",
                "ec2:*Address*",
                 "ec2:*associate*",
                 "ec2:AttachVolume",
                 "ec2:BundleInstance",
                 "ec2:Cancel*",
                 "ec2:*Capacity*",
                 "ec2:CreateInstanceExportTask",
                 "ec2:CreateFlowLogs",
                 "ec2:*Credit*",
                 "ec2:*Cidr",
                 "ec2:Delete*",
                 "ec2:Describe*",
                 "ec2:DetachVolume",
                 "ec2:*Dhcp*",
                 "ec2:*Ebs*",
                 "ec2:*Event*",
                 "ec2:*Fleet*",
                 "ec2:*Format",
                 "ec2:*Gateway*",
                 "ec2:Get*",
                 "ec2:*InstanceAttribute",
                 "ec2:*InternetGateway",
                 "ec2:*Image*",
                 "ec2:*KeyPair",
                 "ec2:*Kms*",
                 "ec2:*monitor*",
                 "ec2:*Network*",
                 "ec2:*Options",
                 "ec2:*PrefixList*",
                 "ec2:ReportInstanceStatus",
                 "ec2:RebootInstances",
                 "ec2:ReplaceIamInstanceProfileAssociation",
                 "ec2:*Route*",
                 "ec2:*SecurityGroup*",
                 "ec2:Search*",
                 "ec2:SendDiagnosticInterrupt",
                 "ec2:StopInstances",
                 "ec2:*Snapshot*",
                 "ec2:*Subnet*",
                 "ec2:*Tag*",
                 "ec2:TerminateInstances",
                 "ec2:*Traffic*",
                 "ec2:*Vpn*",
                 "ec2:*Vpc*",
                "events:Describe*",
                "events:List*",
                "events:TestEventPattern",
                "iam:List*",
                "iam:Get*",
                "logs:List*",
                "logs:Describe*",
                "logs:Get*",
                "logs:StartQuery",
                "logs:StopQuery",
                "logs:TestMetricFilter",
                "logs:FilterLogEvents",
                "resource-groups:Get*",
                "resource-groups:List*",
                "resource-groups:SearchResources",
                "ssm:List*",
                "ssm:Describe*",
                "ssm:Get*",
                "ssm:PutInventory",
                "ssm:PutComplianceItems",
                "ssm:PutConfigurePackageResult",
                "ssm:UpdateAssociationStatus",
                "ssm:UpdateInstanceAssociationStatus",
                "ssm:UpdateInstanceInformation",
                "ssm:CancelCommand",
                "ssm:SendCommand",
                "ssm:StartAutomationExecution",
                "ssm:StartSession",
                "ssm:TerminateSession",
                "ssm:ResumeSession",
                "ssm:DescribeSessions",
                "ssm:GetConnectionStatus",
                "sns:ListTopics",
                "tag:*"
            ],
            "Resource": "*"
        },
        {
            "Sid": "RestrictInstanceActions",
            "Effect": "Allow",
            "Action": [
                "ec2:CreateVolume",
                "ec2:EnableVolumeIO",
                "ec2:ImportVolume",
                "ec2:ImportSnapshot",
                "ec2:ImportInstance",
                "ec2:*LaunchTemplate*",
                "ec2:ModifyVolume*",
                "ec2:RunInstances",
                "ec2:StartInstances"
            ],
            "Resource": "*",
            "Condition": {
                "StringEqualsIfExists": {
                    "ec2:Owner": "amazon"
                },
                "ForAllValues:StringLikeIfExists": {
                    "ec2:InstanceType": [
                        "*.nano",
                        "*.micro",
                        "*.small"
                    ],
                    "ec2:Tenancy": "default"
                },
                "StringNotEqualsIfExists": {
                    "ec2:PlacementGroupStrategy": "cluster"
                },
                "StringNotEqualsIgnoreCaseIfExists": {
                    "ec2:VolumeType": [
                        "io1",
                        "st1"
                    ]
                },
                "NumericLessThanEqualsIfExists": {
                    "ec2:VolumeSize": "101"
                }
            }
        },
        {
            "Sid": "RestrictActions",
            "Effect": "Deny",
            "Action": [
                "ec2:*Spot*",
                "ec2:*ReservedInstances*",
                "ec2:*Scheduled*",
                "ec2:*Purchase*",
                "ec2:EnableFastSnapshotRestores"
            ],
            "Resource": "*"
        }
    ]
}
