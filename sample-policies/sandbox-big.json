########### START DELETE HERE ###########
# This policy is comprehensive and does not permit service:*
# However this policy exceeds the 6144 character limit https: //docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length
# The workaround is to break this policy down into multiple policies and then attach them to the user.
# We could make use CloudFormation to create the policies and then attach them to the user. If you want to attach it to an existing user, create a group attach the policies and then the user to the group.
########### END DELETE HERE   ###########

{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "AllowAllActions",
            "Effect": "Allow",
            "Action": [
                "autoscaling:*InstanceRefresh",
                "autoscaling:*Lifecycle*",
                "autoscaling:*LoadBalancer*",
                "autoscaling:*Metrics*",
                "autoscaling:*Policy",
                "autoscaling:*Processes",
                "autoscaling:*Standby",
                "autoscaling:*Tags*",
                "autoscaling:Attach*",
                "autoscaling:Batch*",
                "autoscaling:Delete*",
                "autoscaling:Describe*",
                "autoscaling:Detach*",
                "autoscaling:Get*",
                "autoscaling:Put*",
                "autoscaling:Set*",
                "cloud9:*Tag*",
                "cloud9:*TemporaryCredentials*",
                "cloud9:Activate*",
                "cloud9:Delete*",
                "cloud9:Describe*",
                "cloud9:Get*",
                "cloud9:List*",
                "cloud9:UpdateMembershipSettings",
                "cloud9:UpdateSSHRemote",
                "cloud9:UpdateUserSettings",
                "cloud9:Validate*",
                "cloudformation:Describe*",
                "cloudformation:Detect*",
                "cloudformation:EstimateTemplateCost",
                "cloudformation:Get*",
                "cloudformation:List*",
                "cloudtrail:CreateTrail",
                "cloudtrail:DescribeTrails",
                "cloudtrail:GetEventSelectors",
                "cloudtrail:GetTrailStatus",
                "cloudtrail:ListPublicKeys",
                "cloudtrail:ListTags",
                "cloudtrail:LookupEvents",
                "cloudtrail:Put*",
                "cloudtrail:StartLogging",
                "cloudtrail:UpdateTrail",
                "cloudwatch:Describe*",
                "cloudwatch:Get*",
                "cloudwatch:List*",
                "cloudwatch:Put*",
                "compute-optimizer:Describe*",
                "compute-optimizer:Get*",
                "dynamodb:Batch*",
                "dynamodb:ConditionCheckItem",
                "dynamodb:Create*",
                "dynamodb:Delete*",
                "dynamodb:Describe*",
                "dynamodb:Get*",
                "dynamodb:List*",
                "dynamodb:PutItem",
                "dynamodb:Query",
                "dynamodb:Restore*",
                "dynamodb:Scan",
                "dynamodb:TagResource",
                "dynamodb:UntagResource",
                "dynamodb:Update*",
                "ec2:*Address*",
                "ec2:*Bundle*",
                "ec2:*Cidr*",
                "ec2:*Dhcp*",
                "ec2:*Encryption*",
                "ec2:*Event*",
                "ec2:*Gateway*",
                "ec2:*IdFormat",
                "ec2:*Image*",
                "ec2:*KeyPair",
                "ec2:*Kms*",
                "ec2:*Log*",
                "ec2:*Managed*",
                "ec2:*Network*",
                "ec2:*Route*",
                "ec2:*SecurityGroup*",
                "ec2:*SnapshotAttribute",
                "ec2:*Subnet*",
                "ec2:*Tag*",
                "ec2:*Task",
                "ec2:*Traffic*",
                "ec2:*Vpc*",
                "ec2:*Vpn*",
                "ec2:Accept*",
                "ec2:AllocateHosts",
                "ec2:Associate*",
                "ec2:AttachVolume",
                "ec2:Cancel*",
                "ec2:Confirm*",
                "ec2:CopySnapshot",
                "ec2:CreateSnapshot*",
                "ec2:Delete*",
                "ec2:Describe*",
                "ec2:DetachVolume",
                "ec2:Disable*",
                "ec2:Disassociate*",
                "ec2:Export*",
                "ec2:Get*",
                "ec2:ModifyAvailabilityZoneGroup",
                "ec2:ModifyInstanceMetadataOptions",
                "ec2:MonitorInstances",
                "ec2:ReleaseHosts",
                "ec2:ReplaceIamInstanceProfileAssociation",
                "ec2:ReportInstanceStatus",
                "ec2:SendDiagnosticInterrupt",
                "ec2:StopInstances",
                "ec2:TerminateInstances",
                "ec2:UnmonitorInstances",
                "ecr:*Tag*",
                "ecr:*Upload*",
                "ecr:Batch*",
                "ecr:CreateRepository",
                "ecr:Delete*",
                "ecr:Describe*",
                "ecr:Get*",
                "ecr:List*",
                "ecr:Put*",
                "ecr:SetRepositoryPolicy",
                "ecr:Start*",
                "ecs:*Poll*",
                "ecs:*Register*",
                "ecs:*Tag*",
                "ecs:*Task",
                "ecs:Create*",
                "ecs:Delete*",
                "ecs:Describe*",
                "ecs:List*",
                "ecs:Put*",
                "ecs:Start*",
                "ecs:Submit*",
                "ecs:Update*",
                "eks:*tag*",
                "eks:*Update*",
                "eks:Create*",
                "eks:Delete*",
                "eks:Describe*",
                "eks:List*",
                "elasticloadbalancing:*LoadBalancer",
                "elasticloadbalancing:*Tags",
                "elasticloadbalancing:*TargetGroup",
                "elasticloadbalancing:AddListenerCertificates",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteRule",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:Describe*",
                "elasticloadbalancing:Modify*",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:Set*",
                "events:Describe*",
                "events:List*",
                "events:Put*",
                "events:RemoveTargets",
                "events:TestEventPattern",
                "glacier:*",
                "iam:*tag*",
                "iam:Get*",
                "iam:List*",
                "iot:*",
                "iotanalytics:*",
                "kinesis:*",
                "kinesisanalytics:*",
                "kinesisvideo:*",
                "kms:Describe*",
                "kms:List*",
                "lambda:*Alias",
                "lambda:*EventSourceMapping",
                "lambda:*Function*",
                "lambda:*Permission",
                "lambda:*Tag*",
                "lambda:*Version*",
                "lambda:Create*",
                "lambda:EnableReplication",
                "lambda:Get*",
                "lambda:Invoke*",
                "lambda:List*",
                "logs:Describe*",
                "logs:FilterLogEvents",
                "logs:Get*",
                "logs:List*",
                "logs:StartQuery",
                "logs:StopQuery",
                "logs:TestMetricFilter",
                "rds:*ActivityStream",
                "rds:*AvailabilityZone*",
                "rds:*Backup*",
                "rds:*Cluster",
                "rds:*DBProxy*",
                "rds:*Event*",
                "rds:*Export*",
                "rds:*Group*",
                "rds:*MaintenanceAction",
                "rds:*Region*",
                "rds:*Snapshot*",
                "rds:*Tag*",
                "rds:Add*",
                "rds:Delete*",
                "rds:Describe*",
                "rds:Download*",
                "rds:ImportInstallationMedia",
                "rds:ModifyCertificates",
                "rds:PromoteReadReplica",
                "rds:Remove*",
                "rds:Restore*",
                "rds:StopDBInstance*",
                "rds-data:*",
                "resource-groups:*tag",
                "resource-groups:Get*",
                "resource-groups:List*",
                "resource-groups:SearchResources",
                "route53:AssociateVPCWithHostedZone",
                "route53:Change*",
                "route53:Create*",
                "route53:Delete*",
                "route53:DisassociateVPCFromHostedZone",
                "route53:Get*",
                "route53:List*",
                "route53:TestDNSAnswer",
                "route53:Update*",
                "s3:*Bucket*",
                "s3:*Job*",
                "s3:AbortMultipartUpload",
                "s3:Create*",
                "s3:Delete*",
                "s3:Get*",
                "s3:List*",
                "s3:Put*",
                "s3:Replicate*",
                "s3:RestoreObject",
                "sagemaker:*",
                "secretsmanager:CreateSecret",
                "sns:*Permission",
                "sns:*PhoneNumber*",
                "sns:*PlatformApplication*",
                "sns:*subscribe",
                "sns:*Tag*",
                "sns:*Topic*",
                "sns:ConfirmSubscription",
                "sns:Create*",
                "sns:DeleteEndpoint",
                "sns:Get*",
                "sns:List*",
                "sns:Publish",
                "sns:Set*",
                "ssm:CancelCommand",
                "ssm:Describe*",
                "ssm:Get*",
                "ssm:List*",
                "ssm:PutComplianceItems",
                "ssm:PutConfigurePackageResult",
                "ssm:PutInventory",
                "ssm:ResumeSession",
                "ssm:SendCommand",
                "ssm:StartAutomationExecution",
                "ssm:StartSession",
                "ssm:TerminateSession",
                "ssm:UpdateAssociationStatus",
                "ssm:UpdateInstanceAssociationStatus",
                "ssm:UpdateInstanceInformation",
                "sts:DecodeAuthorizationMessage",
                "tag:Get*",
                "tag:TagResources",
                "tag:UntagResources"
            ],
            "Resource": "*"
        },
        {
            "Sid": "DenyAllActions",
            "Effect": "Deny",
            "Action": [
                "aws-portal:ModifyAccount",
                "aws-portal:ModifyBilling",
                "aws-portal:ModifyPaymentMethods",
                "aws-portal:ViewAccount",
                "aws-portal:ViewPaymentMethods",
                "codebuild:Batch*",
                "codebuild:Create*",
                "codebuild:Update*",
                "dynamodb:*Reserved*",
                "ec2:*Fpga*",
                "ec2:*Purchase*",
                "ec2:*ReservedInstances*",
                "ec2:*Scheduled*",
                "ec2:*Spot*",
                "ec2:AcceptVpcEndpointConnections",
                "ec2:AttachVpnGateway",
                "ec2:CreateCapacityReservation",
                "ec2:CreateVpnGateway",
                "ec2:EnableFastSnapshotRestores",
                "glacier:*VaultLock",
                "glacier:SetVaultAccessPolicy",
                "rds:Purchase*",
                "redshift:AcceptReservedNodeExchange",
                "redshift:PurchaseReservedNodeOffering",
                "route53domains:RegisterDomain",
                "s3:*BucketObjectLock*",
                "s3:*ObjectLegalHold",
                "s3:*ObjectRetention"
            ],
            "Resource": "*"
        },
        {
            "Sid": "RestrictInstanceActions",
            "Effect": "Allow",
            "Action": [
                "ec2:CreateFleet",
                "ec2:CreateLaunchTemplate",
                "ec2:CreateLaunchTemplateVersion",
                "ec2:CreateVolume",
                "ec2:EnableVolumeIO",
                "ec2:ImportInstance",
                "ec2:ImportSnapshot",
                "ec2:ImportVolume",
                "ec2:ModifyFleet",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyInstanceCreditSpecification",
                "ec2:ModifyLaunchTemplate",
                "ec2:ModifyVolume",
                "ec2:ModifyVolumeAttribute",
                "ec2:RebootInstances",
                "ec2:ResetInstanceAttribute",
                "ec2:RunInstances",
                "ec2:StartInstances"
            ],
            "Resource": "*",
            "Condition": {
                "StringEqualsIfExists": {
                    "ec2:Owner": "amazon"
                },
                "StringLikeIfExists": {
                    "ec2:InstanceType": [
                        "t*.nano",
                        "t*.micro",
                        "t*.small",
                        "t*.medium"
                    ],
                    "ec2:Tenancy": "default"
                },
                "StringNotEqualsIfExists": {
                    "ec2:PlacementGroupStrategy": "cluster"
                },
                "StringNotLikeIfExists": {
                    "ec2:VolumeType": [
                        "io*",
                        "st*"
                    ]
                },
                "NumericLessThanEqualsIfExists": {
                    "ec2:VolumeSize": "100"
                }
            }
        },
        {
            "Sid": "RestrictASGGroup",
            "Effect": "Allow",
            "Action": [
                "autoscaling:UpdateAutoScalingGroup",
                "autoscaling:CreateAutoScalingGroup"
            ],
            "Resource": "*",
            "Condition": {
                "StringLikeIfExists": {
                    "autoscaling:InstanceTypes": [
                        "t*.nano",
                        "t*.micro",
                        "t*.small",
                        "t*.medium"
                    ]
                },
                "NumericLessThanEqualsIfExists": {
                    "autoscaling:MaxSize": "6"
                }
            }
        },
        {
            "Sid": "RestrictASGConfig",
            "Effect": "Allow",
            "Action": "autoscaling:CreateLaunchConfiguration",
            "Resource": "*",
            "Condition": {
                "StringLike": {
                    "autoscaling:InstanceType": [
                        "t*.nano",
                        "t*.micro",
                        "t*.small",
                        "t*.medium"
                    ]
                }
            }
        },
        {
            "Sid": "RestrictRDSActivity",
            "Effect": "Allow",
            "Action": [
                "rds:CreateDBInstance",
                "rds:CreateDBInstanceReadReplica",
                "rds:ModifyDBInstance",
                "rds:RebootDBInstance",
                "rds:StartDBInstance"
            ],
            "Resource": "*",
            "Condition": {
                "ForAnyValue:StringLikeIfExists": {
                    "rds:DatabaseEngine": [
                        "aurora-mysql",
                        "aurora-postgresql",
                        "mysql",
                        "postgres",
                        "mariadb"
                    ],
                    "rds:DatabaseClass": [
                        "db.t*.nano",
                        "db.t*.micro",
                        "db.t*.small",
                        "db.t*.medium"
                    ]
                },
                "NumericLessThanEqualsIfExists": {
                    "rds:StorageSize": "100"
                },
                "NumericEqualsIfExists": {
                    "rds:Piops": "0"
                }
            }
        },
        {
            "Sid": "RestrictCloud9",
            "Effect": "Allow",
            "Action": [
                "cloud9:CreateEnvironment*",
                "cloud9:UpdateEnvironment*"
            ],
            "Resource": "*",
            "Condition": {
                "ForAnyValue:StringLike": {
                    "cloud9:InstanceType": [
                        "t*.nano",
                        "t*.micro",
                        "t*.small"
                    ]
                }
            }
        },
        {
            "Sid": "RestrictSageMaker",
            "Effect": "Deny",
            "Action": [
                "sagemaker:CreateEndpointConfig",
                "sagemaker:CreateNotebookInstance",
                "sagemaker:CreateProcessingJob",
                "sagemaker:CreateTrainingJob",
                "sagemaker:UpdateNotebookInstance"
            ],
            "Resource": "*",
            "Condition": {
                "ForAnyValue:StringNotLikeIfExists": {
                    "sagemaker:InstanceTypes": [
                        "ml.t*.medium",
                        "ml.t*.large",
                        "ml.m*.large",
                        "ml.t*.xlarge",
                        "ml.m*.xlarge"
                    ]
                }
            }
        },
        {
            "Sid": "PassRoleAndPolicies",
            "Effect": "Allow",
            "Action": "iam:PassRole",
            "Resource": "*",
            "Condition": {
                "StringLikeIfExists": {
                    "iam:PassedToService": [
                        "application-autoscaling.amazonaws.com*",
                        "athena.amazonaws.com",
                        "autoscaling.amazonaws.com",
                        "cloud9.amazonaws.com",
                        "cognito.amazonaws.com",
                        "ec2.amazonaws.com",
                        "ecr.amazonaws.com",
                        "ecs.amazonaws.com",
                        "elasticloadbalancing.amazonaws.com",
                        "glue.amazonaws.com",
                        "lambda.amazonaws.com",
                        "monitoring.rds.amazonaws.com",
                        "rds.amazonaws.com",
                        "sagemaker.amazonaws.com",
                        "ssm.amazonaws.com"
                    ],
                    "iam:AWSServiceName": [
                        "application-autoscaling.amazonaws.com*",
                        "athena.amazonaws.com",
                        "autoscaling.amazonaws.com",
                        "cloud9.amazonaws.com",
                        "cognito.amazonaws.com",
                        "ec2.amazonaws.com",
                        "ecr.amazonaws.com",
                        "ecs.amazonaws.com",
                        "elasticloadbalancing.amazonaws.com",
                        "glue.amazonaws.com",
                        "lambda.amazonaws.com",
                        "monitoring.rds.amazonaws.com",
                        "rds.amazonaws.com",
                        "sagemaker.amazonaws.com",
                        "ssm.amazonaws.com"
                    ]
                }
            }
        },
        {
            "Sid": "AllowServiceLinkedRoleCreation",
            "Effect": "Allow",
            "Action": "iam:CreateServiceLinkedRole",
            "Resource": "arn:aws:iam::*:role/aws-service-role/*",
            "Condition": {
                "StringLikeIfExists": {
                    "iam:AWSServiceName": [
                        "application-autoscaling.amazonaws.com*",
                        "athena.amazonaws.com",
                        "autoscaling.amazonaws.com",
                        "cloud9.amazonaws.com",
                        "cognito.amazonaws.com",
                        "ec2.amazonaws.com",
                        "ecr.amazonaws.com",
                        "ecs.amazonaws.com",
                        "elasticloadbalancing.amazonaws.com",
                        "glue.amazonaws.com",
                        "lambda.amazonaws.com",
                        "monitoring.rds.amazonaws.com",
                        "rds.amazonaws.com",
                        "sagemaker.amazonaws.com",
                        "ssm.amazonaws.com"
                    ]
                }
            }
        }
    ]
}
